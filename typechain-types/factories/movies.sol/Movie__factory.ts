/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Movie, MovieInterface } from "../../movies.sol/Movie";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "movies",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_movieId",
        type: "uint8",
      },
    ],
    name: "watchMovie",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ee806100206000396000f3fe6080604052600436106100295760003560e01c8063509726811461002e578063e9414d6f1461006b575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906102bd565b61009b565b6040516100629190610318565b60405180910390f35b61008560048036038101906100809190610333565b6100ca565b6040516100929190610318565b60405180910390f35b60006020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360ff1660ff16815260200190815260200160002060009054906101000a900460ff161561013d576001905061021c565b6000620f4240670de0b6b3a76400008460ff1661015a9190610399565b610164919061040a565b90508034146101a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019f90610498565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560ff1660ff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019150505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025182610226565b9050919050565b61026181610246565b811461026c57600080fd5b50565b60008135905061027e81610258565b92915050565b600060ff82169050919050565b61029a81610284565b81146102a557600080fd5b50565b6000813590506102b781610291565b92915050565b600080604083850312156102d4576102d3610221565b5b60006102e28582860161026f565b92505060206102f3858286016102a8565b9150509250929050565b60008115159050919050565b610312816102fd565b82525050565b600060208201905061032d6000830184610309565b92915050565b60006020828403121561034957610348610221565b5b6000610357848285016102a8565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103a482610360565b91506103af83610360565b92508282026103bd81610360565b915082820484148315176103d4576103d361036a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061041582610360565b915061042083610360565b9250826104305761042f6103db565b5b828204905092915050565b600082825260208201905092915050565b7f506c65617365207061792074686520657861637420616d6f756e740000000000600082015250565b6000610482601b8361043b565b915061048d8261044c565b602082019050919050565b600060208201905081810360008301526104b181610475565b905091905056fea2646970667358221220ce3dc15dc7de76801f50de64e982ca6b2d4c8ad6d81b152731c17b41d10c425864736f6c63430008130033";

type MovieConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MovieConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Movie__factory extends ContractFactory {
  constructor(...args: MovieConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Movie & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Movie__factory {
    return super.connect(runner) as Movie__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MovieInterface {
    return new Interface(_abi) as MovieInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Movie {
    return new Contract(address, _abi, runner) as unknown as Movie;
  }
}
